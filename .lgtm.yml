# https://lgtm.com/docs/lgtm/lgtm.yml-configuration-file
path_classifiers:
    test:
        - "*/*/test_*.cpp"
    docs:
        - README.md
        - LICENSE.txt
    library:
        - boost
        - cryptopp
        - googletest
        - hunspell
        - openssl

extraction:
    cpp:
        prepare:
            packages:
                - g++
                - npm
                - pkg-config
                - python3
                - unzip
                - zip
                - zlib1g-dev
        after_prepare:
            - npm install @bazel/bazelisk
            - export AR=gcc-ar
            - export RANLIB=gcc-ranlib
            - export GNU_MAKE=make
            - export GIT=true
            - |-
                export BAZEL=$(find $(pwd) \
                                    -type f \
                                    -executable \
                                    -name bazelisk-linux_amd64 \
                                    -print \
                                    -quit)
            # LGTM's server uses a MITM proxy: https://discuss.lgtm.com/t/598/14
            - |-
                $SEMMLE_JAVA_HOME/bin/keytool -importcert \
                                              -trustcacerts \
                                              -noprompt \
                                              -file $NODE_EXTRA_CA_CERTS \
                                              -alias bazel \
                                              -keystore $(pwd)/bazel \
                                              -storepass 6chars
            - |-
                echo startup \
                     --host_jvm_args=-Djavax.net.ssl.trustStore=$(pwd)/bazel \
                     --host_jvm_args=-Djavax.net.ssl.trustStorePassword=6chars \
                     > ~/.bazelrc
            - export BOOST_DIR=$LGTM_SRC/boost
            - export GTEST_DIR=$LGTM_SRC/googletest
            - export HUNSPELL_DIR=$LGTM_SRC/hunspell
            - export CRYPTOPP_DIR=$LGTM_SRC/cryptopp
            - export OPENSSL_DIR=$LGTM_SRC/openssl
        configure:
            command:
                - ./prepare_deps
        index:
            build_command:
                - $GNU_MAKE -k
