# IMPORTANT: Validate this file at http://lint.travis-ci.org/ before use!
#
# Environment Variables to set up in Travis settings:
#
# For integration with Coverity Scan (https://scan.coverity.com)
# - COVERITY_SCAN_TOKEN: The Project Token in Project Settings.
# - COVERITY_SCAN_NOTIFICATION_EMAIL: Email address to receive notifications.
#
# For integration with SonarCloud (https://sonarcloud.io)
# - SONAR_ORGANIZATION: The SonarCloud organization ID. View it in My Account ->
#                       Organizations. (For personal SonarCloud organizations of
#                       accounts linked to GitHub accounts, it would be of the
#                       form "<username>-github".)
# - SONAR_PROJECTKEY: The SonarCloud project name. View it in your organization
#                     at Administration -> Projects Management.
# - SONAR_TOKEN: Create this SonarCloud access token in My Account -> Security.
# - SONAR_GITHUB_TOKEN: A personal access token of a GitHub account that will
#                       be used by SonarCloud to insert analysis results in pull
#                       requests. Create it in GitHub Settings -> Personal
#                       access tokens. It needs the public_repo and repo:status
#                       scopes.
#
# Note: Encrypted environment variables aren't available to pull request builds.

sudo: false
language: cpp

branches:
    only:
    - master
    - /^travis-.*/

os:
- linux
- osx

dist: trusty
osx_image: xcode9.2

addons:
    apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
    coverity_scan:
        project:
            name: $TRAVIS_REPO_SLUG
            version: $TRAVIS_COMMIT
        # Coverity refuses to run on OSX due to System Integrity Protection
        # being enabled, so we need no hackery here to limit it to Linux only.
        build_command_prepend: $GNU_MAKE -k clean
        build_command: $GNU_MAKE -k
        branch_pattern: master
    sonarcloud:
        organization: $SONAR_ORGANIZATION
        github_token: $SONAR_GITHUB_TOKEN

cache:
    directories:
    - boost
    - googletest
    - hunspell
    - cryptopp
    - $HOME/.sonar/cache
    timeout: 1000

before_install:
- >-
    if [[ "$TRAVIS_OS_NAME" == "osx" ]];
    then
        brew update;
        brew install make;
        brew outdated automake || brew upgrade automake;
        brew outdated libtool || brew upgrade libtool;
        brew install gettext;
        export GNU_MAKE=gmake;
    else
        export GNU_MAKE=make;
    fi
# Workaround for https://github.com/travis-ci/travis-ci/issues/3668
- mkdir -p latest-gcc-symlinks
- ln -s /usr/bin/g++-7 latest-gcc-symlinks/g++
- ln -s /usr/bin/gcc-7 latest-gcc-symlinks/gcc
- export PATH=$PWD/latest-gcc-symlinks:$PATH
- g++ --version

install:
- ./prepare_deps
- export BOOST_DIR=$PWD/boost
- export GTEST_DIR=$PWD/googletest
- export HUNSPELL_DIR=$PWD/hunspell
- export CRYPTOPP_DIR=$PWD/cryptopp

script:
- >-
    if [[ "$TRAVIS_OS_NAME" == "osx" ]];
    then
        $GNU_MAKE -k clean;
        build-wrapper-macosx-x86 --out-dir bw-output $GNU_MAKE -kj 2;
        sonar-scanner -Dsonar.projectKey=$SONAR_PROJECTKEY \
                      -Dsonar.sources=set_1_basics,set_2_block_crypto \
                      -Dsonar.cfamily.build-wrapper-output=bw-output \
                      -Dsonar.host.url='https://sonarcloud.io';
    else
        $GNU_MAKE -kj 2;
    fi
- export HUNSPELL_AFFIX_PATH=$HUNSPELL_DIR/en_US.aff
- export HUNSPELL_DICT_PATH=$HUNSPELL_DIR/en_US.dic
- ./test
